apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
//apply plugin: 'project-reports'
//apply plugin: 'osgi'

group = 'com.101tec'
version = '0.81'

targetCompatibility = 1.8
sourceCompatibility = 1.8

[compileJava, compileTestJava].each() {
    it.options.compilerArgs += ["-Xlint:unchecked", "-Xlint:deprecation", "-Xlint:-options"]
    it.options.encoding = "UTF-8"
}

jar {
    manifest {
        attributes 'Implementation-Title': 'ZkClient', 'Implementation-Version': version
    }
}


//--------------------
// Dependencies
//--------------------
repositories {
    flatDir(dirs: 'lib')
}

dependencies {

    compile ('org.apache.zookeeper:zookeeper:3.4.6'){
        exclude(module: 'log4j')
        exclude(module: 'slf4j-log4j12')
    }
    compile 'org.slf4j:slf4j-api:1.7.15'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.5'
    compile 'org.apache.logging.log4j:log4j-core:2.5'

    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.0.0'
    testCompile 'commons-io:commons-io:1.4'
    testCompile 'org.mockito:mockito-core:1.8.0'

    //dependencies of mockito
    testCompile files('lib/objenesis-1.0.jar', 'lib/hamcrest-core-1.1.jar')
}


//--------------------
// Source Jar
//--------------------
task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourceJar
    archives javadocJar
}

//task jars(dependsOn: ['jar', 'sourceJar'], description: 'Build jar & source jar') << {}

//--------------------
// Util methods
//--------------------
//task wrapper(type: Wrapper, description: 'Generate the Gradle Wrapper') { gradleVersion = '1.3' }
